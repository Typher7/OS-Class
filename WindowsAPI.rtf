{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <windows.h>\
#include <stdio.h>\
\
int main() \{\
    HANDLE hFile;\
    DWORD bytesWritten, bytesRead;\
    char buffer[256];\
    const char *filePath = "example_file.txt";\
    \
    // Create and write to the file\
    hFile = CreateFile(\
        filePath,                // File name\
        GENERIC_WRITE,           // Desired access\
        0,                       // Share mode\
        NULL,                    // Security attributes\
        CREATE_ALWAYS,           // Creation disposition\
        FILE_ATTRIBUTE_NORMAL,   // Flags and attributes\
        NULL                     // Template file\
    );\
\
    if (hFile == INVALID_HANDLE_VALUE) \{\
        printf("Error creating file: %d\\n", GetLastError());\
        return 1;\
    \}\
\
    const char *dataToWrite = "Hello, this is a test file.\\nIt contains multiple lines of text.";\
    if (!WriteFile(hFile, dataToWrite, strlen(dataToWrite), &bytesWritten, NULL)) \{\
        printf("Error writing to file: %d\\n", GetLastError());\
        CloseHandle(hFile);\
        return 1;\
    \}\
\
    CloseHandle(hFile);\
    \
    // Read from the file\
    hFile = CreateFile(\
        filePath,\
        GENERIC_READ,\
        0,\
        NULL,\
        OPEN_EXISTING,\
        FILE_ATTRIBUTE_NORMAL,\
        NULL\
    );\
\
    if (hFile == INVALID_HANDLE_VALUE) \{\
        printf("Error opening file for reading: %d\\n", GetLastError());\
        return 1;\
    \}\
\
    if (!ReadFile(hFile, buffer, sizeof(buffer) - 1, &bytesRead, NULL)) \{\
        printf("Error reading from file: %d\\n", GetLastError());\
        CloseHandle(hFile);\
        return 1;\
    \}\
\
    buffer[bytesRead] = '\\0'; // Null-terminate the string\
    printf("File Content:\\n%s\\n", buffer);\
\
    CloseHandle(hFile);\
\
    // Delete the file\
    if (!DeleteFile(filePath)) \{\
        printf("Error deleting file: %d\\n", GetLastError());\
        return 1;\
    \}\
    printf("File %s deleted.\\n", filePath);\
\
    return 0;\
\}\
}